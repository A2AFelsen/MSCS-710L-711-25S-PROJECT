name: Create Release

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y.%m.%d')" >> "$GITHUB_OUTPUT"

      - name: Download .NET 4.8 Artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          name: build-artifacts-4.8
          path: release_files
          workflow: ci-cd-pipeline.yml
          run_id: ${{ github.event.workflow_run.id }}
          repo: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify Artifact Download
        run: |
          echo "Contents of release_files:"
          ls -R release_files
          if [ ! -f "release_files/OpenHardwareMonitor.exe" ]; then
            echo "Error: OpenHardwareMonitor.exe not found!"
            exit 1
          fi

      - name: Prepare Display Files
        run: |
          mkdir -p release_files/Display
          cp -r Display/* release_files/Display/
          rm -rf release_files/Display/__pycache__
          rm -f release_files/Display/*.pyc

      - name: Create Zip Package
        run: |
          cd release_files
          zip -r ../OpenHardwareMonitor-Release.zip ./*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.date.outputs.date }}"
          name: "OpenHardwareMonitor v${{ steps.date.outputs.date }}"
          body: "Automatic release containing the latest build"
          files: OpenHardwareMonitor-Release.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
