name: Create Release

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' ||
      (github.event.workflow_run.conclusion == 'failure' &&
       !contains(toJson(github.event.workflow_run.jobs.*.name), 'build-and-test') &&
       !contains(toJson(github.event.workflow_run.jobs.*.name), 'codeql'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: List Available Artifacts
        uses: actions/github-script@v6
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });
            console.log('Available artifacts:');
            artifacts.data.artifacts.forEach(artifact => {
              console.log(`- ${artifact.name} (ID: ${artifact.id})`);
            });

      - name: Download .NET 4.8 Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-4.8
          path: release_files

      - name: Verify Artifact Download
        run: |
          echo "Contents of release_files:"
          ls -R release_files
          if [ ! -f "release_files/OpenHardwareMonitor.exe" ]; then
            echo "Error: OpenHardwareMonitor.exe not found in expected location!"
            exit 1
          fi

      - name: Prepare Display Files
        run: |
          mkdir -p release_files/Display
          cp -r Display/* release_files/Display/
          rm -rf release_files/Display/__pycache__
          rm -f release_files/Display/*.pyc

      - name: Create Zip Package
        run: |
          cd release_files
          zip -r ../OpenHardwareMonitor-Release.zip ./*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "OpenHardwareMonitor v$(date +'%Y.%m.%d')"
          body: "Automatic release containing the latest build"
          files: OpenHardwareMonitor-Release.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
