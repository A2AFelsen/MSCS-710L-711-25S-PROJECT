name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint code base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Super-Linter
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_EXCLUDE: .*\.github/workflows/superlinter\.yml.*

  build-and-test:
    name: Build and Test
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore NuGet packages
        working-directory: OpenHardwareMonitor
        run: nuget restore

      - name: Find MSBuild path
        id: find-msbuild
        shell: pwsh
        run: |
          # Use vswhere to locate MSBuild
          $vswherePath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          if (-Not (Test-Path $vswherePath)) {
              Write-Error "vswhere.exe not found at $vswherePath"
              exit 1
          }
          $msbuildPath = & "$vswherePath" -latest -products * -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe
          if (-Not (Test-Path $msbuildPath)) {
              Write-Error "MSBuild not found at $msbuildPath"
              exit 1
          }
          echo "MSBuild Path: $msbuildPath"
          echo "::set-output name=msbuildPath::$msbuildPath"

      - name: Debug MSBuild path
        shell: pwsh
        run: |
          echo "MSBuild Path from previous step: ${{ steps.find-msbuild.outputs.msbuildPath }}"

      - name: Build the project
        working-directory: OpenHardwareMonitor
        shell: pwsh
        run: |
          $msbuildPath = "${{ steps.find-msbuild.outputs.msbuildPath }}"
          if (-Not (Test-Path $msbuildPath)) {
              Write-Error "MSBuild not found at $msbuildPath"
              exit 1
          }
          & "$msbuildPath" OpenHardwareMonitor.sln /p:Configuration=Release

      - name: Run tests
        working-directory: OpenHardwareMonitor
        run: dotnet test --no-build --configuration Release

      - name: Publish build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: OpenHardwareMonitor/bin/Release/OpenHardwareMonitor.exe
